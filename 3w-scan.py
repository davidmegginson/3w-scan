""" Scan 3W datasets on HDX and output basic stats """

import ckancrawler, csv, re, sys

CKAN_URL = "https://data.humdata.org"
"""URL of the HDX CKAN instance"""

USER_AGENT = "HDX-Developer-2015"
"""HTTP user agent to send to HDX"""

SEARCH_FQ = 'vocab_Topics:"who is doing what and where - 3w - 4w - 5w"'
"""Search query (all datasets tagged as 3Ws)"""

ORG_SKIPLIST = ["iati", "ocha-fts", "interaction"]
"""HDX orgs to skip"""

crawler = ckancrawler.Crawler(CKAN_URL, user_agent=USER_AGENT, delay=1)

output = csv.writer(sys.stdout)

# write the header row
output.writerow([
    "Publisher",
    "Source",
    "Effective start date",
    "Effective end date",
    "Latest file date",
    "Dataset title",
    "Dataset code",
    "Countries",
    "Country codes",
    "Status",
    "Total files",
    "Is subnational?",
    "Has HXL tags?",
    "Has uploads?",
])

# write the HXL hashtag row
output.writerow([
    "#org+publisher",
    "#org+source",
    "#date+start",
    "#date+end",
    "#date+latest_file",
    "#x_dataset+title",
    "#x_dataset+code",
    "#country+name+list",
    "#country+code+list",
    "#status",
    "#indicator+files+num",
    "#indicator+subnational+bool",
    "#indicator+hxl+bool",
    "#indicator+uploads+bool",
])

# crawl through all the datasets tagged as 3Ws on HDX
for package in crawler.packages(fq=SEARCH_FQ):
    
    # skip known autogenerated 3Ws
    if package["organization"]["name"] in ORG_SKIPLIST:
        continue

    # extract the start and end dates
    date_results = re.match("^\[(.*) TO (.*)\]$", package["dataset_date"])

    # write the row of info about the dataset
    # [:10] subscript is to get ISO dates without times
    output.writerow([
        package["organization"]["title"],
        package["dataset_source"],
        date_results.group(1)[:10],
        date_results.group(2)[:10],
        max([resource["revision_last_updated"][:10] for resource in package["resources"]]),
        package["title"],
        package["name"],
        ", ".join([group["display_name"] for group in package["groups"]]),
        ", ".join([group["name"].upper() for group in package["groups"]]),
        package["state"],
        package["num_resources"],
        package["subnational"],
        1 if "hxl" in [tag["name"] for tag in package["tags"]] else 0,
        1 if "file.upload" in [resource["resource_type"] for resource in package["resources"]] else 0
    ])

sys.exit(0)

